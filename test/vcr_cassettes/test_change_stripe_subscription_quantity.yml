---
http_interactions:
- request:
    method: post
    uri: https://api.stripe.com/v1/customers
    body:
      encoding: UTF-8
      string: email=stripe%40example.org&name=Stripe+User
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.45.0 PayRails/3.0.24 (https://github.com/pay-rails/pay)
      Authorization:
      - Bearer <STRIPE_PRIVATE_KEY>
      Content-Type:
      - application/x-www-form-urlencoded
      Stripe-Version:
      - '2020-08-27'
      X-Stripe-Client-User-Agent:
      - '{"application":{"name":"PayRails","partner_id":"pp_partner_IqhY0UExnJYLxg","url":"https://github.com/pay-rails/pay","version":"3.0.24"},"bindings_version":"5.45.0","lang":"ruby","lang_version":"3.0.2
        p107 (2021-07-07)","platform":"x86_64-darwin21","engine":"ruby","publisher":"stripe","uname":"Darwin
        Collins-MBP 21.3.0 Darwin Kernel Version 21.3.0: Wed Jan  5 21:37:58 PST 2022;
        root:xnu-8019.80.24~20/RELEASE_X86_64 x86_64","hostname":"Collins-MBP"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 29 Mar 2022 15:16:37 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '616'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Idempotency-Key:
      - 2469620d-ed6d-4bb8-a63c-38694fe9ccc1
      Original-Request:
      - req_iQnyua7OzuNfqS
      Request-Id:
      - req_iQnyua7OzuNfqS
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2020-08-27'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "cus_LPVoOd0ElRvzvO",
          "object": "customer",
          "address": null,
          "balance": 0,
          "created": 1648566997,
          "currency": null,
          "default_source": null,
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "stripe@example.org",
          "invoice_prefix": "6FCE03F7",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null
          },
          "livemode": false,
          "metadata": {
          },
          "name": "Stripe User",
          "next_invoice_sequence": 1,
          "phone": null,
          "preferred_locales": [

          ],
          "shipping": null,
          "tax_exempt": "none",
          "test_clock": null
        }
  recorded_at: Tue, 29 Mar 2022 15:16:37 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/payment_methods/pm_card_visa/attach
    body:
      encoding: UTF-8
      string: customer=cus_LPVoOd0ElRvzvO
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.45.0 PayRails/3.0.24 (https://github.com/pay-rails/pay)
      Authorization:
      - Bearer <STRIPE_PRIVATE_KEY>
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_iQnyua7OzuNfqS","request_duration_ms":722}}'
      Stripe-Version:
      - '2020-08-27'
      X-Stripe-Client-User-Agent:
      - '{"application":{"name":"PayRails","partner_id":"pp_partner_IqhY0UExnJYLxg","url":"https://github.com/pay-rails/pay","version":"3.0.24"},"bindings_version":"5.45.0","lang":"ruby","lang_version":"3.0.2
        p107 (2021-07-07)","platform":"x86_64-darwin21","engine":"ruby","publisher":"stripe","uname":"Darwin
        Collins-MBP 21.3.0 Darwin Kernel Version 21.3.0: Wed Jan  5 21:37:58 PST 2022;
        root:xnu-8019.80.24~20/RELEASE_X86_64 x86_64","hostname":"Collins-MBP"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 29 Mar 2022 15:16:38 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '943'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Idempotency-Key:
      - 5ed7c1c4-ddd5-4f5f-92a6-bd079f4f2e77
      Original-Request:
      - req_ftp5r5RRveYPp5
      Request-Id:
      - req_ftp5r5RRveYPp5
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2020-08-27'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "pm_1KigmfKXBGcbgpbZBTAWEkX6",
          "object": "payment_method",
          "billing_details": {
            "address": {
              "city": null,
              "country": null,
              "line1": null,
              "line2": null,
              "postal_code": null,
              "state": null
            },
            "email": null,
            "name": null,
            "phone": null
          },
          "card": {
            "brand": "visa",
            "checks": {
              "address_line1_check": null,
              "address_postal_code_check": null,
              "cvc_check": null
            },
            "country": "US",
            "exp_month": 3,
            "exp_year": 2023,
            "fingerprint": "w4XDzQOFakih5EZM",
            "funding": "credit",
            "generated_from": null,
            "last4": "4242",
            "networks": {
              "available": [
                "visa"
              ],
              "preferred": null
            },
            "three_d_secure_usage": {
              "supported": true
            },
            "wallet": null
          },
          "created": 1648566998,
          "customer": "cus_LPVoOd0ElRvzvO",
          "livemode": false,
          "metadata": {
          },
          "type": "card"
        }
  recorded_at: Tue, 29 Mar 2022 15:16:38 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/customers/cus_LPVoOd0ElRvzvO
    body:
      encoding: UTF-8
      string: invoice_settings[default_payment_method]=pm_1KigmfKXBGcbgpbZBTAWEkX6
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.45.0 PayRails/3.0.24 (https://github.com/pay-rails/pay)
      Authorization:
      - Bearer <STRIPE_PRIVATE_KEY>
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_ftp5r5RRveYPp5","request_duration_ms":961}}'
      Stripe-Version:
      - '2020-08-27'
      X-Stripe-Client-User-Agent:
      - '{"application":{"name":"PayRails","partner_id":"pp_partner_IqhY0UExnJYLxg","url":"https://github.com/pay-rails/pay","version":"3.0.24"},"bindings_version":"5.45.0","lang":"ruby","lang_version":"3.0.2
        p107 (2021-07-07)","platform":"x86_64-darwin21","engine":"ruby","publisher":"stripe","uname":"Darwin
        Collins-MBP 21.3.0 Darwin Kernel Version 21.3.0: Wed Jan  5 21:37:58 PST 2022;
        root:xnu-8019.80.24~20/RELEASE_X86_64 x86_64","hostname":"Collins-MBP"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 29 Mar 2022 15:16:39 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '641'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Idempotency-Key:
      - 739be8ea-d102-4beb-9239-691f5caf9ef6
      Original-Request:
      - req_W85UvTesRQQ5XD
      Request-Id:
      - req_W85UvTesRQQ5XD
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2020-08-27'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "cus_LPVoOd0ElRvzvO",
          "object": "customer",
          "address": null,
          "balance": 0,
          "created": 1648566997,
          "currency": null,
          "default_source": null,
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "stripe@example.org",
          "invoice_prefix": "6FCE03F7",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": "pm_1KigmfKXBGcbgpbZBTAWEkX6",
            "footer": null
          },
          "livemode": false,
          "metadata": {
          },
          "name": "Stripe User",
          "next_invoice_sequence": 1,
          "phone": null,
          "preferred_locales": [

          ],
          "shipping": null,
          "tax_exempt": "none",
          "test_clock": null
        }
  recorded_at: Tue, 29 Mar 2022 15:16:38 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/subscriptions
    body:
      encoding: UTF-8
      string: expand[0]=pending_setup_intent&expand[1]=latest_invoice.payment_intent&expand[2]=latest_invoice.charge.invoice&items[0][plan]=default&off_session=true&trial_from_plan=true&customer=cus_LPVoOd0ElRvzvO
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.45.0 PayRails/3.0.24 (https://github.com/pay-rails/pay)
      Authorization:
      - Bearer <STRIPE_PRIVATE_KEY>
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_W85UvTesRQQ5XD","request_duration_ms":579}}'
      Stripe-Version:
      - '2020-08-27'
      X-Stripe-Client-User-Agent:
      - '{"application":{"name":"PayRails","partner_id":"pp_partner_IqhY0UExnJYLxg","url":"https://github.com/pay-rails/pay","version":"3.0.24"},"bindings_version":"5.45.0","lang":"ruby","lang_version":"3.0.2
        p107 (2021-07-07)","platform":"x86_64-darwin21","engine":"ruby","publisher":"stripe","uname":"Darwin
        Collins-MBP 21.3.0 Darwin Kernel Version 21.3.0: Wed Jan  5 21:37:58 PST 2022;
        root:xnu-8019.80.24~20/RELEASE_X86_64 x86_64","hostname":"Collins-MBP"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 29 Mar 2022 15:16:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '22670'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Idempotency-Key:
      - 914143d9-d3c8-4201-962e-10e38e129b02
      Original-Request:
      - req_KJCjGV1tzkaE4S
      Request-Id:
      - req_KJCjGV1tzkaE4S
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2020-08-27'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 29 Mar 2022 15:16:42 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/subscription_items/si_LPVoLKKl9gbvWy
    body:
      encoding: UTF-8
      string: quantity=5
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.45.0 PayRails/3.0.24 (https://github.com/pay-rails/pay)
      Authorization:
      - Bearer <STRIPE_PRIVATE_KEY>
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_KJCjGV1tzkaE4S","request_duration_ms":3393}}'
      Stripe-Version:
      - '2020-08-27'
      X-Stripe-Client-User-Agent:
      - '{"application":{"name":"PayRails","partner_id":"pp_partner_IqhY0UExnJYLxg","url":"https://github.com/pay-rails/pay","version":"3.0.24"},"bindings_version":"5.45.0","lang":"ruby","lang_version":"3.0.2
        p107 (2021-07-07)","platform":"x86_64-darwin21","engine":"ruby","publisher":"stripe","uname":"Darwin
        Collins-MBP 21.3.0 Darwin Kernel Version 21.3.0: Wed Jan  5 21:37:58 PST 2022;
        root:xnu-8019.80.24~20/RELEASE_X86_64 x86_64","hostname":"Collins-MBP"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 29 Mar 2022 15:16:43 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '1403'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Idempotency-Key:
      - 7a7d4599-8a3c-4292-9a6f-36c8f146534f
      Original-Request:
      - req_4uYstW3bn8W8h3
      Request-Id:
      - req_4uYstW3bn8W8h3
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2020-08-27'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "si_LPVoLKKl9gbvWy",
          "object": "subscription_item",
          "billing_thresholds": null,
          "created": 1648567000,
          "metadata": {
          },
          "plan": {
            "id": "default",
            "object": "plan",
            "active": true,
            "aggregate_usage": null,
            "amount": 1000,
            "amount_decimal": "1000",
            "billing_scheme": "per_unit",
            "created": 1583852982,
            "currency": "usd",
            "interval": "month",
            "interval_count": 1,
            "livemode": false,
            "metadata": {
            },
            "nickname": "Default",
            "product": "prod_EYTX7RYhRjcwKD",
            "tiers_mode": null,
            "transform_usage": null,
            "trial_period_days": null,
            "usage_type": "licensed"
          },
          "price": {
            "id": "default",
            "object": "price",
            "active": true,
            "billing_scheme": "per_unit",
            "created": 1583852982,
            "currency": "usd",
            "livemode": false,
            "lookup_key": null,
            "metadata": {
            },
            "nickname": "Default",
            "product": "prod_EYTX7RYhRjcwKD",
            "recurring": {
              "aggregate_usage": null,
              "interval": "month",
              "interval_count": 1,
              "trial_period_days": null,
              "usage_type": "licensed"
            },
            "tax_behavior": "unspecified",
            "tiers_mode": null,
            "transform_quantity": null,
            "type": "recurring",
            "unit_amount": 1000,
            "unit_amount_decimal": "1000"
          },
          "quantity": 5,
          "subscription": "sub_1KigmhKXBGcbgpbZ6y697nXA",
          "tax_rates": [

          ]
        }
  recorded_at: Tue, 29 Mar 2022 15:16:43 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/subscriptions/sub_1KigmhKXBGcbgpbZ6y697nXA?expand%5B%5D=latest_invoice.charge.invoice&expand%5B%5D=latest_invoice.payment_intent&expand%5B%5D=pending_setup_intent
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.45.0 PayRails/3.0.24 (https://github.com/pay-rails/pay)
      Authorization:
      - Bearer <STRIPE_PRIVATE_KEY>
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_4uYstW3bn8W8h3","request_duration_ms":878}}'
      Stripe-Version:
      - '2020-08-27'
      X-Stripe-Client-User-Agent:
      - '{"application":{"name":"PayRails","partner_id":"pp_partner_IqhY0UExnJYLxg","url":"https://github.com/pay-rails/pay","version":"3.0.24"},"bindings_version":"5.45.0","lang":"ruby","lang_version":"3.0.2
        p107 (2021-07-07)","platform":"x86_64-darwin21","engine":"ruby","publisher":"stripe","uname":"Darwin
        Collins-MBP 21.3.0 Darwin Kernel Version 21.3.0: Wed Jan  5 21:37:58 PST 2022;
        root:xnu-8019.80.24~20/RELEASE_X86_64 x86_64","hostname":"Collins-MBP"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 29 Mar 2022 15:16:44 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '22670'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_aPgriY3pBqibMV
      Stripe-Version:
      - '2020-08-27'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 29 Mar 2022 15:16:44 GMT
recorded_with: VCR 6.1.0
